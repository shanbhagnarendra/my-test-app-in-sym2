<?php

namespace Proxies\__CG__\Hrms\Bundle\EmployeeBundle\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class HrmCompanynotification extends \Hrms\Bundle\EmployeeBundle\Entity\HrmCompanynotification implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function setBirthday($birthday)
    {
        $this->__load();
        return parent::setBirthday($birthday);
    }

    public function getBirthday()
    {
        $this->__load();
        return parent::getBirthday();
    }

    public function setContractEnd($contractEnd)
    {
        $this->__load();
        return parent::setContractEnd($contractEnd);
    }

    public function getContractEnd()
    {
        $this->__load();
        return parent::getContractEnd();
    }

    public function setNotificationStatus($notificationStatus)
    {
        $this->__load();
        return parent::setNotificationStatus($notificationStatus);
    }

    public function getNotificationStatus()
    {
        $this->__load();
        return parent::getNotificationStatus();
    }

    public function setEmpAdd($empAdd)
    {
        $this->__load();
        return parent::setEmpAdd($empAdd);
    }

    public function getEmpAdd()
    {
        $this->__load();
        return parent::getEmpAdd();
    }

    public function setEmpModify($empModify)
    {
        $this->__load();
        return parent::setEmpModify($empModify);
    }

    public function getEmpModify()
    {
        $this->__load();
        return parent::getEmpModify();
    }

    public function setEmpRemove($empRemove)
    {
        $this->__load();
        return parent::setEmpRemove($empRemove);
    }

    public function getEmpRemove()
    {
        $this->__load();
        return parent::getEmpRemove();
    }

    public function setAddDate($addDate)
    {
        $this->__load();
        return parent::setAddDate($addDate);
    }

    public function getAddDate()
    {
        $this->__load();
        return parent::getAddDate();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setEmployee(\Hrms\Bundle\EmployeeBundle\Entity\HrmEmployee $employee = NULL)
    {
        $this->__load();
        return parent::setEmployee($employee);
    }

    public function getEmployee()
    {
        $this->__load();
        return parent::getEmployee();
    }

    public function setCompany(\Hrms\Bundle\EmployeeBundle\Entity\HrmCompany $company = NULL)
    {
        $this->__load();
        return parent::setCompany($company);
    }

    public function getCompany()
    {
        $this->__load();
        return parent::getCompany();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'birthday', 'contractEnd', 'notificationStatus', 'empAdd', 'empModify', 'empRemove', 'addDate', 'id', 'employee', 'company');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}